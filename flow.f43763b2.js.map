{"version":3,"sources":["../../src/layouts/shared/SizeCache.ts","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../src/polyfillLoaders/EventTarget.ts","../../src/layouts/shared/BaseLayout.ts","../src/layouts/flow.ts","../node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","loadJSBundle","script","document","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":"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","file":"flow.f43763b2.js","sourceRoot":"../demo","sourcesContent":["export interface SizeCacheConfig {\n    roundAverageSize?: boolean\n}\n\nexport class SizeCache {\n    private _map: Map<number | string, number> = new Map();\n    private _roundAverageSize = true;\n    totalSize: number = 0;\n\n    constructor(config?: SizeCacheConfig) {\n        if (config?.roundAverageSize === false) {\n            this._roundAverageSize = false;\n        }\n    }\n  \n    set(index: number | string, value: number): void {\n      const prev = this._map.get(index) || 0;\n      this._map.set(index, value);\n      this.totalSize += value - prev;\n    }\n  \n    get averageSize(): number {\n        if (this._map.size > 0) {\n            const average = this.totalSize / this._map.size;\n            return this._roundAverageSize\n            ? Math.round(average)\n            : average;\n        }\n        return 0;\n    }\n  \n    getSize(index: number | string) {\n      return this._map.get(index);\n    }\n  \n    clear() {\n      this._map.clear();\n      this.totalSize = 0;\n    }\n}","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\ntype EventTargetModule = typeof import('event-target-shim');\n\ninterface EventTargetConstructor {\n    new(): EventTarget\n}\n\nlet _ET: EventTargetModule | EventTargetConstructor;\nlet ET: EventTargetConstructor;\n\nexport default async function EventTarget() {\n    return ET || init();\n}\n\nasync function init() {\n    _ET = window.EventTarget;\n    try {\n        new _ET();\n    }\n    catch {\n        _ET = (await import('event-target-shim')).EventTarget;\n    }\n    return (ET = _ET);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport EventTarget from '../../polyfillLoaders/EventTarget.js';\nimport {Layout, Positions, ScrollDirection, Size, dimension, position} from './Layout.js';\n\ntype UpdateVisibleIndicesOptions = {\n  emit?: boolean\n}\n\nexport interface BaseLayoutConfig {\n  direction?: ScrollDirection\n}\n\nexport function dim1(direction: ScrollDirection): dimension {\n  return direction === 'horizontal' ? 'width': 'height';\n}\n\nexport function dim2(direction: ScrollDirection): dimension {\n  return direction === 'horizontal' ? 'height': 'width';\n}\n\nexport function pos1(direction: ScrollDirection): position {\n  return direction === 'horizontal' ? 'left': 'top';\n}\n\nexport function pos2(direction: ScrollDirection): position {\n  return direction === 'horizontal' ? 'top': 'left';\n}\n\nexport abstract class BaseLayout<C extends BaseLayoutConfig> implements Layout {\n  /**\n   * The last set viewport scroll position.\n   */\n  private _latestCoords: Positions = {left: 0, top: 0};\n\n  /**\n   * Scrolling direction.\n   */\n  private _direction: ScrollDirection | null = null;\n\n  /**\n   * Dimensions of the viewport.\n   */\n  private _viewportSize: Size = {width: 0, height: 0};\n\n  /**\n   * Flag for debouncing asynchnronous reflow requests.\n   */\n  private _pendingReflow = false;\n\n  private _pendingLayoutUpdate = false;\n\n  /**\n   * Index of the item that has been scrolled to via the public API. When the\n   * viewport is otherwise scrolled, this value is set back to -1.\n   */\n  protected _scrollToIndex = -1;\n\n  /**\n   * When a child is scrolled to, the offset from the top of the child and the\n   * top of the viewport. Value is a proportion of the item size.\n   */\n  private _scrollToAnchor = 0;\n\n  /**\n   * The index of the first item intersecting the viewport.\n   */\n  protected _firstVisible = 0;\n\n  /**\n   * The index of the last item intersecting the viewport.\n   */\n  protected _lastVisible = 0;\n\n  private _eventTargetPromise: Promise<void> = (EventTarget().then((Ctor) => {\n    this._eventTarget = new Ctor();\n  }));\n\n  /**\n   * Pixel offset in the scroll direction of the first child.\n   */\n  protected _physicalMin = 0;\n\n  /**\n   * Pixel offset in the scroll direction of the last child.\n   */\n  protected _physicalMax = 0;\n\n  /**\n   * Index of the first child.\n   */\n  protected _first = -1;\n\n  /**\n   * Index of the last child.\n   */\n  protected _last = -1;\n\n  /**\n   * Length in the scrolling direction.\n   */\n  protected _sizeDim: dimension = 'height';\n\n  /**\n   * Length in the non-scrolling direction.\n   */\n  protected _secondarySizeDim: dimension = 'width';\n\n  /**\n   * Position in the scrolling direction.\n   */\n  protected _positionDim: position = 'top';\n\n  /**\n   * Position in the non-scrolling direction.\n   */\n  protected _secondaryPositionDim: position = 'left';\n\n  /**\n   * Current scroll offset in pixels.\n   */\n  protected _scrollPosition = 0;\n\n  /**\n   * Difference between current scroll offset and scroll offset calculated due\n   * to a reflow.\n   */\n  protected _scrollError = 0;\n\n  /**\n   * Total number of items that could possibly be displayed. Used to help\n   * calculate the scroll size.\n   */\n  protected _totalItems = 0;\n\n  /**\n   * The total (estimated) length of all items in the scrolling direction.\n   */\n  protected _scrollSize = 1;\n\n  /**\n   * Number of pixels beyond the viewport to still include\n   * in the active range of items.\n   */\n  // TODO (graynorton): Probably want to make this something we calculate based\n  // on viewport size, item size, other factors, possibly still with a dial of some kind\n  protected _overhang = 1000;\n\n  private _eventTarget: EventTarget | null = null;\n\n  protected get _defaultConfig() : C {\n    return {\n      direction: 'vertical'\n    } as C\n  }\n\n  constructor(config?: C) {\n    // Delay setting config so that subclasses do setup work first\n    Promise.resolve().then(() => this.config = config || this._defaultConfig);\n  }\n\n  set config(config: C) {\n    Object.assign(this, Object.assign({}, this._defaultConfig, config));\n  }\n\n  get config(): C {\n    return {\n      direction: this.direction\n    } as C;\n  }\n\n  /**\n   * Maximum index of children + 1, to help estimate total height of the scroll\n   * space.\n   */\n  get totalItems(): number {\n    return this._totalItems;\n  }\n  set totalItems(num) {\n    const _num = Number(num);\n    if (_num !== this._totalItems) {\n      this._totalItems = _num;\n      this._scheduleReflow();\n    }\n  }\n\n  /**\n   * Primary scrolling direction.\n   */\n  get direction(): ScrollDirection {\n    return this._direction!;\n  }\n  set direction(dir) {\n    // Force it to be either horizontal or vertical.\n    dir = (dir === 'horizontal') ? dir : 'vertical';\n    if (dir !== this._direction) {\n      this._direction = dir;\n      this._sizeDim = (dir === 'horizontal') ? 'width' : 'height';\n      this._secondarySizeDim = (dir === 'horizontal') ? 'height' : 'width';\n      this._positionDim = (dir === 'horizontal') ? 'left' : 'top';\n      this._secondaryPositionDim = (dir === 'horizontal') ? 'top' : 'left';\n      this._triggerReflow();\n    }\n  }\n\n  /**\n   * Height and width of the viewport.\n   */\n  get viewportSize(): Size {\n    return this._viewportSize;\n  }\n  set viewportSize(dims) {\n    const {_viewDim1, _viewDim2} = this;\n    Object.assign(this._viewportSize, dims);\n    if (_viewDim2 !== this._viewDim2) {\n      // this._viewDim2Changed();\n      this._scheduleLayoutUpdate();\n    } else if (_viewDim1 !== this._viewDim1) {\n      this._checkThresholds();\n    }\n  }\n\n  /**\n   * Scroll offset of the viewport.\n   */\n  get viewportScroll(): Positions {\n    return this._latestCoords;\n  }\n  set viewportScroll(coords) {\n    Object.assign(this._latestCoords, coords);\n    const oldPos = this._scrollPosition;\n    this._scrollPosition = this._latestCoords[this._positionDim];\n    if (oldPos !== this._scrollPosition) {\n      this._scrollPositionChanged(oldPos, this._scrollPosition);\n      this._updateVisibleIndices({emit: true});\n    }\n    this._checkThresholds();\n  }\n\n  /**\n   * Perform a reflow if one has been scheduled.\n   */\n  reflowIfNeeded(force: boolean = false) {\n    if (force || this._pendingReflow) {\n      this._pendingReflow = false;\n      this._reflow();\n    }\n  }\n\n  /**\n   * Scroll to the child at the given index, and the given position within that\n   * child.\n   */\n  scrollToIndex(index: number, position = 'start') {\n    if (!Number.isFinite(index))\n      return;\n    index = Math.min(this.totalItems, Math.max(0, index));\n    this._scrollToIndex = index;\n    if (position === 'nearest') {\n      position = index > this._first + this._num / 2 ? 'end' : 'start';\n    }\n    switch (position) {\n      case 'start':\n        this._scrollToAnchor = 0;\n        break;\n      case 'center':\n        this._scrollToAnchor = 0.5;\n        break;\n      case 'end':\n        this._scrollToAnchor = 1;\n        break;\n      default:\n        throw new TypeError(\n            'position must be one of: start, center, end, nearest');\n    }\n    this._scheduleReflow();\n  }\n\n  async dispatchEvent(evt: Event) {\n    await this._eventTargetPromise;\n    this._eventTarget!.dispatchEvent(evt);\n  }\n\n  async addEventListener(type: string, listener: EventListener | EventListenerObject | null, options?: boolean | AddEventListenerOptions | undefined) {\n    await this._eventTargetPromise;\n    this._eventTarget!.addEventListener(type, listener, options);\n  }\n\n  async removeEventListener(type: string, callback: EventListener | EventListenerObject | null, options?: boolean | EventListenerOptions | undefined) {\n    await this._eventTargetPromise;\n    this._eventTarget!.removeEventListener(type, callback, options);\n  }\n\n  /**\n   * Get the top and left positioning of the item at idx.\n   */\n  protected abstract _getItemPosition(idx: number): Positions;\n\n  /**\n   * Update _first and _last based on items that should be in the current\n   * range.\n   */\n  protected abstract _getActiveItems(): void\n\n  protected abstract _getItemSize(_idx: number): Size\n\n    /**\n   * Calculates (precisely or by estimating, if needed) the total length of all items in\n   * the scrolling direction, including spacing, caching the value in the `_scrollSize` field.\n   * \n   * Should return a minimum value of 1 to ensure at least one item is rendered.\n   * TODO (graynorton): Possibly no longer required, but leaving here until it can be verified.\n   */\n  protected abstract _updateScrollSize(): void\n\n  protected _updateLayout(): void {\n    // Override\n  }\n\n  // protected _viewDim2Changed(): void {\n  //   this._scheduleLayoutUpdate();\n  // }\n\n  /**\n   * The height or width of the viewport, whichever corresponds to the scrolling direction.\n   */\n  protected get _viewDim1(): number {\n    return this._viewportSize[this._sizeDim];\n  }\n\n  /**\n   * The height or width of the viewport, whichever does NOT correspond to the scrolling direction.\n   */\n  protected get _viewDim2(): number {\n    return this._viewportSize[this._secondarySizeDim];\n  }\n\n  protected _scheduleReflow() {\n    this._pendingReflow = true;\n  }\n\n  protected _scheduleLayoutUpdate() {\n    this._pendingLayoutUpdate = true;\n    this._scheduleReflow();\n  }\n\n  // For triggering a reflow based on incoming changes to\n  // the layout config.\n  protected _triggerReflow() {\n    this._scheduleLayoutUpdate();\n    // TODO graynorton@: reflowIfNeeded() isn't really supposed\n    // to be called internally. Address in larger cleanup\n    // of virtualizer / layout interaction pattern.\n    // this.reflowIfNeeded(true);\n    Promise.resolve().then(() => this.reflowIfNeeded());\n  }\n\n  protected _reflow() {\n    if (this._pendingLayoutUpdate) {\n      this._updateLayout();\n      this._pendingLayoutUpdate = false;\n    }\n    this._updateScrollSize();\n    this._getActiveItems();\n    this._scrollIfNeeded();\n    this._updateVisibleIndices();\n    this._emitScrollSize();\n    this._emitRange();\n    this._emitChildPositions();\n    this._emitScrollError();\n  }\n\n  protected _scrollIfNeeded() {\n    if (this._scrollToIndex === -1) {\n      return;\n    }\n    const index = this._scrollToIndex;\n    const anchor = this._scrollToAnchor;\n    const pos = this._getItemPosition(index)[this._positionDim];\n    const size = this._getItemSize(index)[this._sizeDim];\n\n    const curAnchorPos = this._scrollPosition + this._viewDim1 * anchor;\n    const newAnchorPos = pos + size * anchor;\n    // Ensure scroll position is an integer within scroll bounds.\n    const scrollPosition = Math.floor(Math.min(\n        this._scrollSize - this._viewDim1,\n        Math.max(0, this._scrollPosition - curAnchorPos + newAnchorPos)));\n    this._scrollError += this._scrollPosition - scrollPosition;\n    this._scrollPosition = scrollPosition;\n  }\n\n  protected _emitRange(inProps: unknown = undefined) {\n    const detail = Object.assign(\n        {\n          first: this._first,\n          last: this._last,\n          num: this._num,\n          stable: true,\n          firstVisible: this._firstVisible,\n          lastVisible: this._lastVisible,\n        },\n        inProps);\n    this.dispatchEvent(new CustomEvent('rangechange', {detail}));\n  }\n\n  protected _emitScrollSize() {\n    const detail = {\n      [this._sizeDim]: this._scrollSize,\n    };\n    this.dispatchEvent(new CustomEvent('scrollsizechange', {detail}));\n  }\n\n  protected _emitScrollError() {\n    if (this._scrollError) {\n      const detail = {\n        [this._positionDim]: this._scrollError,\n        [this._secondaryPositionDim]: 0,\n      };\n      this.dispatchEvent(new CustomEvent('scrollerrorchange', {detail}));\n      this._scrollError = 0;\n    }\n  }\n\n  /**\n   * Get or estimate the top and left positions of items in the current range.\n   * Emit an itempositionchange event with these positions.\n   */\n  protected _emitChildPositions() {\n    const detail: {[key: number]: Positions} = {};\n    for (let idx = this._first; idx <= this._last; idx++) {\n      detail[idx] = this._getItemPosition(idx);\n    }\n    this.dispatchEvent(new CustomEvent('itempositionchange', {detail}));\n  }\n\n  /**\n   * Number of items to display.\n   */\n  private get _num(): number {\n    if (this._first === -1 || this._last === -1) {\n      return 0;\n    }\n    return this._last - this._first + 1;\n  }\n\n  private _checkThresholds() {\n    if (this._viewDim1 === 0 && this._num > 0) {\n      this._scheduleReflow();\n    } else {\n      const min = Math.max(0, this._scrollPosition - this._overhang);\n      const max = Math.min(\n          this._scrollSize,\n          this._scrollPosition + this._viewDim1 + this._overhang);\n      if (this._physicalMin > min || this._physicalMax < max) {\n        this._scheduleReflow();\n      }\n    }\n  }\n\n  /**\n   * Find the indices of the first and last items to intersect the viewport.\n   * Emit a visibleindiceschange event when either index changes.\n   */\n   protected _updateVisibleIndices(options?: UpdateVisibleIndicesOptions) {\n    if (this._first === -1 || this._last === -1) return;\n\n    let firstVisible = this._first;\n    while (\n      firstVisible < this._last &&\n      Math.round(\n        this._getItemPosition(firstVisible)[this._positionDim] +\n        this._getItemSize(firstVisible)[this._sizeDim]\n      )\n      <=\n      Math.round (this._scrollPosition)\n     ) {\n      firstVisible++;\n    }\n\n    let lastVisible = this._last;\n    while (\n      lastVisible > this._first &&\n      Math.round(this._getItemPosition(lastVisible)[this._positionDim])\n      >=\n      Math.round(this._scrollPosition + this._viewDim1)\n    ) {\n      lastVisible--;\n    }\n\n    if (firstVisible !== this._firstVisible || lastVisible !== this._lastVisible) {\n      this._firstVisible = firstVisible;\n      this._lastVisible = lastVisible;\n      if (options && options.emit) {\n        this._emitRange();\n      }\n    }\n  }\n\n  private _scrollPositionChanged(oldPos: number, newPos: number) {\n    // When both values are bigger than the max scroll position, keep the\n    // current _scrollToIndex, otherwise invalidate it.\n    const maxPos = this._scrollSize - this._viewDim1;\n    if (oldPos < maxPos || newPos < maxPos) {\n      this._scrollToIndex = -1;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { SizeCache } from './shared/SizeCache.js';\nimport {BaseLayout, BaseLayoutConfig, dim1} from './shared/BaseLayout.js';\nimport {ItemBox, Positions, Size, Margins, margin, ScrollDirection, offsetAxis} from './shared/Layout.js';\n\ntype ItemBounds = {\n  pos: number,\n  size: number\n};\n\ntype FlowLayoutConstructor = {\n  prototype: FlowLayout,\n  new(config?: BaseLayoutConfig): FlowLayout\n}\n\ntype FlowLayoutSpecifier = BaseLayoutConfig & {\n  type: FlowLayoutConstructor\n}\n\ntype FlowLayoutSpecifierFactory = (config?: BaseLayoutConfig) => FlowLayoutSpecifier;\n\nexport const flow: FlowLayoutSpecifierFactory = (config?: BaseLayoutConfig) => Object.assign({\n  type: FlowLayout\n}, config);\n\nfunction leadingMargin(direction: ScrollDirection): margin {\n  return direction === 'horizontal' ? 'marginLeft' : 'marginTop';\n}\n\nfunction trailingMargin(direction: ScrollDirection): margin {\n  return direction === 'horizontal' ? 'marginRight' : 'marginBottom';\n}\n\nfunction offset(direction: ScrollDirection): offsetAxis {\n  return direction === 'horizontal' ? 'xOffset' : 'yOffset';\n}\n\nfunction collapseMargins(a: number, b: number): number {\n  const m = [a, b].sort();\n  return m[1] <= 0\n  ? Math.min(...m)\n  : m[0] >= 0\n    ? Math.max(...m)\n    : m[0] + m[1];\n}\n\nclass MetricsCache {\n  private _childSizeCache = new SizeCache();\n  private _marginSizeCache = new SizeCache();\n  private _metricsCache: Map<number, Size & Margins> = new Map();\n\n  update(metrics: {[key: number]: Size & Margins}, direction: ScrollDirection) {\n    const marginsToUpdate: Set<number> = new Set();\n    Object.keys(metrics).forEach((key) => {\n      const k = Number(key);\n      this._metricsCache.set(k, metrics[k]);\n      this._childSizeCache.set(k, metrics[k][dim1(direction)]);\n      marginsToUpdate.add(k);\n      marginsToUpdate.add(k + 1);\n    });\n    for (const k of marginsToUpdate) {\n      const a = this._metricsCache.get(k)?.[leadingMargin(direction)] || 0;\n      const b = this._metricsCache.get(k - 1)?.[trailingMargin(direction)] || 0;\n      this._marginSizeCache.set(k, collapseMargins(a, b))\n    }\n  }\n\n  get averageChildSize(): number {\n    return this._childSizeCache.averageSize;\n  }\n\n  get totalChildSize(): number {\n    return this._childSizeCache.totalSize;\n  }\n\n  get averageMarginSize(): number {\n    return this._marginSizeCache.averageSize;\n  }\n\n  get totalMarginSize(): number {\n    return this._marginSizeCache.totalSize;\n  }\n\n  getLeadingMarginValue(index: number, direction: ScrollDirection) {\n    return this._metricsCache.get(index)?.[leadingMargin(direction)] || 0;\n  }\n\n  getChildSize(index: number) {\n    return this._childSizeCache.getSize(index);\n  }\n\n  getMarginSize(index: number) {\n    return this._marginSizeCache.getSize(index);\n  }\n\n  clear() {\n    this._childSizeCache.clear();\n    this._marginSizeCache.clear();\n    this._metricsCache.clear();\n  }\n}\n\nexport class FlowLayout extends BaseLayout<BaseLayoutConfig> {\n  /**\n   * Initial estimate of item size\n   */\n  _itemSize: Size = {width: 100, height: 100};\n\n  /**\n   * Indices of children mapped to their (position and length) in the scrolling\n   * direction. Used to keep track of children that are in range.\n   */\n  _physicalItems: Map<number, ItemBounds> = new Map();\n\n  /**\n   * Used in tandem with _physicalItems to track children in range across\n   * reflows.\n   */\n  _newPhysicalItems: Map<number, ItemBounds> = new Map();\n\n  /**\n   * Width and height of children by their index.\n   */\n  _metricsCache = new MetricsCache();\n\n  /**\n   * anchorIdx is the anchor around which we reflow. It is designed to allow\n   * jumping to any point of the scroll size. We choose it once and stick with\n   * it until stable. _first and _last are deduced around it.\n   */\n  _anchorIdx: number | null = null;\n\n  /**\n   * Position in the scrolling direction of the anchor child.\n   */\n  _anchorPos: number | null = null;\n\n  /**\n   * Whether all children in range were in range during the previous reflow.\n   */\n  _stable = true;\n\n  /**\n   * Whether to remeasure children during the next reflow.\n   */\n  _needsRemeasure = false;\n\n  private _measureChildren = true;\n\n  _estimate = true;\n\n  // protected _defaultConfig: BaseLayoutConfig = Object.assign({}, super._defaultConfig, {\n\n  // })\n\n  // constructor(config: Layout1dConfig) {\n  //   super(config);\n  // }\n\n  get measureChildren() {\n    return this._measureChildren;\n  }\n\n  /**\n   * Determine the average size of all children represented in the sizes\n   * argument.\n   */\n  updateItemSizes(sizes: {[key: number]: ItemBox}) {\n    this._metricsCache.update(sizes as Size & Margins, this.direction);\n    // if (this._nMeasured) {\n      // this._updateItemSize();\n      this._scheduleReflow();\n    // }\n  }\n\n  /**\n   * Set the average item size based on the total length and number of children\n   * in range.\n   */\n  // _updateItemSize() {\n  //   // Keep integer values.\n  //   this._itemSize[this._sizeDim] = this._metricsCache.averageChildSize;\n  // }\n\n  _getPhysicalItem(idx: number): ItemBounds | undefined {\n    return this._newPhysicalItems.get(idx) ?? this._physicalItems.get(idx);\n  }\n\n  _getSize(idx: number): number | undefined {\n    const item = this._getPhysicalItem(idx);\n    return item && this._metricsCache.getChildSize(idx);\n  }\n\n  _getAverageSize(): number {\n    return this._metricsCache.averageChildSize || this._itemSize[this._sizeDim];\n  }\n\n  /**\n   * Returns the position in the scrolling direction of the item at idx.\n   * Estimates it if the item at idx is not in the DOM.\n   */\n  _getPosition(idx: number): number {\n    const item = this._getPhysicalItem(idx);\n    const { averageMarginSize } = this._metricsCache;\n    return idx === 0\n      ? this._metricsCache.getMarginSize(0) ?? averageMarginSize\n      : item\n        ? item.pos\n        : averageMarginSize + idx * (averageMarginSize + this._getAverageSize());\n  }\n\n  _calculateAnchor(lower: number, upper: number): number {\n    if (lower <= 0) {\n      return 0;\n    }\n    if (upper > this._scrollSize - this._viewDim1) {\n      return this._totalItems - 1;\n    }\n    return Math.max(\n        0,\n        Math.min(\n            this._totalItems - 1,\n            Math.floor(((lower + upper) / 2) / this._delta)));\n  }\n\n  _getAnchor(lower: number, upper: number): number {\n    if (this._physicalItems.size === 0) {\n      return this._calculateAnchor(lower, upper);\n    }\n    if (this._first < 0) {\n      console.error('_getAnchor: negative _first');\n      return this._calculateAnchor(lower, upper);\n    }\n    if (this._last < 0) {\n      console.error('_getAnchor: negative _last');\n      return this._calculateAnchor(lower, upper);\n    }\n\n    const firstItem = this._getPhysicalItem(this._first),\n          lastItem = this._getPhysicalItem(this._last),\n          firstMin = firstItem!.pos,\n          lastMin = lastItem!.pos,\n          lastMax = lastMin + this._metricsCache.getChildSize(this._last)!;\n\n    if (lastMax < lower) {\n      // Window is entirely past physical items, calculate new anchor\n      return this._calculateAnchor(lower, upper);\n    }\n    if (firstMin > upper) {\n      // Window is entirely before physical items, calculate new anchor\n      return this._calculateAnchor(lower, upper);\n    }\n    // Window contains a physical item\n    // Find one, starting with the one that was previously first visible\n    let candidateIdx = this._firstVisible - 1;\n    let cMax = -Infinity;\n    while (cMax < lower) {\n      const candidate = this._getPhysicalItem(++candidateIdx);\n      cMax = candidate!.pos + this._metricsCache.getChildSize(candidateIdx)!;\n    }\n    return candidateIdx;\n  }\n\n  /**\n   * Updates _first and _last based on items that should be in the current\n   * viewed range.\n   */\n  _getActiveItems() {\n    if (this._viewDim1 === 0 || this._totalItems === 0) {\n      this._clearItems();\n    } else {\n      this._getItems();\n    }\n  }\n\n  /**\n   * Sets the range to empty.\n   */\n  _clearItems() {\n    this._first = -1;\n    this._last = -1;\n    this._physicalMin = 0;\n    this._physicalMax = 0;\n    const items = this._newPhysicalItems;\n    this._newPhysicalItems = this._physicalItems;\n    this._newPhysicalItems.clear();\n    this._physicalItems = items;\n    this._stable = true;\n  }\n\n  /*\n   * Updates _first and _last based on items that should be in the given range.\n   */\n  _getItems() {\n    const items = this._newPhysicalItems;\n    this._stable = true;\n    let lower, upper;\n\n    // The anchorIdx is the anchor around which we reflow. It is designed to\n    // allow jumping to any point of the scroll size. We choose it once and\n    // stick with it until stable. first and last are deduced around it.\n\n    // If we have a scrollToIndex, we anchor on the given\n    // index and set the scroll position accordingly\n    if (this._scrollToIndex >= 0) {\n      this._anchorIdx = Math.min(this._scrollToIndex, this._totalItems - 1);\n      this._anchorPos = this._getPosition(this._anchorIdx);\n      this._scrollIfNeeded();\n    }\n\n    // Determine the lower and upper bounds of the region to be\n    // rendered, relative to the viewport\n    lower = this._scrollPosition - this._overhang;//leadingOverhang;\n    upper = this._scrollPosition + this._viewDim1 + this._overhang;// trailingOverhang;\n\n    if (upper < 0 || lower > this._scrollSize) {\n      this._clearItems();\n      return;\n    }\n\n    // If we are scrolling to a specific index or if we are doing another\n    // pass to stabilize a previously started reflow, we will already\n    // have an anchor. If not, establish an anchor now.\n    if (this._anchorIdx === null || this._anchorPos === null) {\n      this._anchorIdx = this._getAnchor(lower, upper);\n      this._anchorPos = this._getPosition(this._anchorIdx);\n    }\n\n    let anchorSize = this._getSize(this._anchorIdx);\n    if (anchorSize === undefined) {\n      this._stable = false;\n      anchorSize = this._getAverageSize();\n    }\n\n    let anchorLeadingMargin = this._metricsCache.getMarginSize(this._anchorIdx) ?? this._metricsCache.averageMarginSize;\n    let anchorTrailingMargin = this._metricsCache.getMarginSize(this._anchorIdx + 1) ?? this._metricsCache.averageMarginSize;\n\n    if (this._anchorIdx === 0) {\n      this._anchorPos = anchorLeadingMargin;\n    }\n\n    if (this._anchorIdx === this._totalItems - 1) {\n      this._anchorPos = this._scrollSize - anchorTrailingMargin - anchorSize;\n    }\n\n    // Anchor might be outside bounds, so prefer correcting the error and keep\n    // that anchorIdx.\n    let anchorErr = 0;\n\n    if (this._anchorPos + anchorSize + anchorTrailingMargin < lower) {\n      anchorErr = lower - (this._anchorPos + anchorSize + anchorTrailingMargin);\n    }\n\n    if (this._anchorPos - anchorLeadingMargin > upper) {\n      anchorErr = upper - (this._anchorPos - anchorLeadingMargin);\n    }\n\n    if (anchorErr) {\n      this._scrollPosition -= anchorErr;\n      lower -= anchorErr;\n      upper -= anchorErr;\n      this._scrollError += anchorErr;\n    }\n\n    items.set(this._anchorIdx, {pos: this._anchorPos, size: anchorSize});\n\n    this._first = (this._last = this._anchorIdx);\n    this._physicalMin = this._anchorPos;\n    this._physicalMax = this._anchorPos + anchorSize;\n\n    while (this._physicalMin > lower && this._first > 0) {\n      let size = this._getSize(--this._first);\n      if (size === undefined) {\n        this._stable = false;\n        size = this._getAverageSize();\n      }\n      let margin = this._metricsCache.getMarginSize(this._first + 1);\n      if (margin === undefined) {\n        this._stable = false;\n        margin = this._metricsCache.averageMarginSize;\n      }\n      this._physicalMin -= size + margin;\n      const pos = this._physicalMin;\n      items.set(this._first, {pos, size});\n      if (this._stable === false && this._estimate === false) {\n        break;\n      }\n    }\n\n    while (this._physicalMax < upper && this._last < this._totalItems - 1) {\n      let margin = this._metricsCache.getMarginSize(++this._last);\n      if (margin === undefined) {\n        this._stable = false;\n        margin = this._metricsCache.averageMarginSize;\n      }\n      let size = this._getSize(this._last);\n      if (size === undefined) {\n        this._stable = false;\n        size = this._getAverageSize();\n      }\n      const pos = this._physicalMax + margin;\n      items.set(this._last, {pos, size});\n      this._physicalMax += margin + size;\n      if (this._stable === false && this._estimate === false) {\n        break;\n      }\n    }\n\n    // This handles the cases where we were relying on estimated sizes.\n    const extentErr = this._calculateError();\n    if (extentErr) {\n      this._physicalMin -= extentErr;\n      this._physicalMax -= extentErr;\n      this._anchorPos -= extentErr;\n      this._scrollPosition -= extentErr;\n      items.forEach((item) => item.pos -= extentErr);\n      this._scrollError += extentErr;\n    }\n\n    if (this._stable) {\n      this._newPhysicalItems = this._physicalItems;\n      this._newPhysicalItems.clear();\n      this._physicalItems = items;\n    }\n  }\n\n  _calculateError(): number {\n    const { averageMarginSize } = this._metricsCache;\n    if (this._first === 0) {\n      return this._physicalMin - (this._metricsCache.getMarginSize(0) ?? averageMarginSize);\n    } else if (this._physicalMin <= 0) {\n      return this._physicalMin - (this._first * this._delta);\n    } else if (this._last === this._totalItems - 1) {\n      return (this._physicalMax + (this._metricsCache.getMarginSize(this._totalItems) ?? averageMarginSize)) - this._scrollSize;\n    } else if (this._physicalMax >= this._scrollSize) {\n      return (\n          (this._physicalMax - this._scrollSize) +\n          ((this._totalItems - 1 - this._last) * this._delta));\n    }\n    return 0;\n  }\n\n  // TODO: Can this be made to inherit from base, with proper hooks?\n  _reflow() {\n    const {_first, _last, _scrollSize} = this;\n\n    this._updateScrollSize();\n    this._getActiveItems();\n\n    if (this._scrollSize !== _scrollSize) {\n      this._emitScrollSize();\n    }\n\n    this._updateVisibleIndices();\n    this._emitRange();\n    if (this._first === -1 && this._last === -1) {\n      this._resetReflowState();\n    } else if (\n        this._first !== _first || this._last !== _last ||\n        this._needsRemeasure) {\n      this._emitChildPositions();\n      this._emitScrollError();\n    } else {\n      this._emitChildPositions();\n      this._emitScrollError();\n      this._resetReflowState();\n    }\n  }\n\n  _resetReflowState() {\n    this._anchorIdx = null;\n    this._anchorPos = null;\n    this._stable = true;\n  }\n\n  _updateScrollSize() {\n    const { averageMarginSize } = this._metricsCache;\n    this._scrollSize = Math.max(1, this._totalItems * (averageMarginSize + this._getAverageSize()) + averageMarginSize);\n  }\n\n  /**\n   * Returns the average size (precise or estimated) of an item in the scrolling direction,\n   * including any surrounding space.\n   */\n  protected get _delta(): number {\n    const { averageMarginSize } = this._metricsCache;\n    return this._getAverageSize() + averageMarginSize;\n  }\n\n  /**\n   * Returns the top and left positioning of the item at idx.\n   */\n  _getItemPosition(idx: number): Positions {\n    return {\n      [this._positionDim]: this._getPosition(idx),\n      [this._secondaryPositionDim]: 0,\n      [offset(this.direction)]: -(this._metricsCache.getLeadingMarginValue(idx, this.direction) ?? this._metricsCache.averageMarginSize)\n    } as Positions;\n  }\n\n  /**\n   * Returns the height and width of the item at idx.\n   */\n  _getItemSize(idx: number): Size {\n    return {\n      [this._sizeDim]: (this._getSize(idx) || this._getAverageSize()) + (this._metricsCache.getMarginSize(idx + 1) ?? this._metricsCache.averageMarginSize),\n      [this._secondarySizeDim]: this._itemSize[this._secondarySizeDim]\n    } as Size;\n  }\n\n  _viewDim2Changed() {\n    this._needsRemeasure = true;\n    this._scheduleReflow();\n  }\n\n  _emitRange() {\n    const remeasure = this._needsRemeasure;\n    const stable = this._stable;\n    this._needsRemeasure = false;\n    super._emitRange({remeasure, stable});\n  }\n}\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}